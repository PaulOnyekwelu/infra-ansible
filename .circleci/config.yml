version: 2.1

docker_infra: &docker_infra
  docker:
    - image: amazon/aws-cli
docker_ansible: &docker_ansible
  docker:
    - image: python:3.7-alpine3.11

commands:
  run_create_infra:
    steps:
      - run:
          name: "Creating AWS Infrastructure..."
          command: "./scripts/create-infra.sh"
  get_ec2_pub_addr:
    steps:
      - run:
          name: "Get EC2 instances public addresses"
          command: "./scripts/getPubAddr.sh"
  install_ansible:
    steps:
      - run:
          name: "install Ansible"
          command: "apk add --update ansible"
  run_ansible_playbook:
    steps:
      - run:
          name: "Run ansible playbook and configure server"
          command: "ansible-playbook ./ansible-main.yml -i ./inventory"
  destroy_infra:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  create_infra:
    <<: *docker_infra
    steps:
      - checkout
      - run_create_infra
      - destroy_infra
  populate_inventory:
    <<: *docker_infra
    steps:
      - checkout
      - get_ec2_pub_addr
      - save_cache:
          name: persisting inventory file
          key: inventory_cache
          paths:
            - ./inventory
  configure_infra:
    <<: *docker_ansible
    steps:
      - checkout
      # - restore_cache:
      #     name: restoring inventory file
      #     keys:
      #       - inventory_cache
      - add_ssh_keys:
          fingerprints: ["2e:67:62:ae:93:9a:4e:5f:c0:2a:22:fe:45:1a:95:e4"]
      - run: cat ./inventory
      - install_ansible
      - run_ansible_playbook

workflows:
  continuous_deployment:
    jobs:
      # - create_infra
      # - populate_inventory:
      #     requires:
      #       - create_infra
      - configure_infra:
          requires:
            - populate_inventory
